[WIP] Corrected bug in memory usageage tracking and poor coverage in test case 

Found that the way the test program was measuring the memory usage was incorrect.  The new memory usage for the PushP test case is 4096, not 16.  Also, the test case for PushP did not cover the case for large stack size due to recursion.  When added test case to cover that, the memory usage jumped to 4176.

Changes:
- Create factories dynamically on the heap instead of statically.  This allows for the memory allocations for the main code to be seperate from the memory allocations for the PuspP code so that we can measure the PuspP memory usage seperate from the main code memory usage.
- Added object constructors and destructors to ExecBase_ptr, corrected a bug in the comparison operators in ExecBase_ptr, and overloaded the assignment operator in ExecBase_ptr.  These chages make the ExecBase_ptr class identical to the CodeBase_ptr class.  This was overlooked when initially creating the ExecBase_ptr class.  Not sure if this helps with memory management.  Should run a test in the future to check.  However, it does not seem to hurt so I am leaving it for now.
- Added code to srink_to_fit the stacks in clear_stacks() to help with memory management.  Does not seem to make a difference.  Need to investigate further.
- Added DoRangeClassFactory class.
- Modified the test engine to rerun the tests multiple times to measure the accumulitive increase in heap memory usage.