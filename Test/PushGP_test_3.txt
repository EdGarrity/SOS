{:instruction FLOAT.FROMINTEGER :close  0}{:instruction INTEGER.SHOVE :close  4}{:instruction INTEGER.YANKDUP :close  4}{:instruction INTEGER.= :close  0}{:instruction INTEGER.SWAP :close  0}{:instruction FLOAT.FROMDATA :close  0}{:instruction EXEC.DO*RANGE :close  0}{:instruction INTEGER.FROMBOOLEAN :close  0}{:instruction INTEGER.POP :close  0}{:instruction EXEC.WHEN :close  0}{:instruction FLOAT.ROT :close  0}{:instruction CODE.FROMFLOAT :close  0}{:instruction INTEGER.MIN :close  4}{:instruction INTEGER.MAX :close  0}{:instruction EXEC.POP :close  4}{:instruction INTEGER.> :close  0}{:instruction BOOLEAN.NOT :close  0}{:instruction CODE.SWAP :close  0}{:instruction FLOAT.YANKDUP :close  0}{:instruction CODE.LENGTH :close  0}{:instruction FLOAT.FLUSH :close  0}{:instruction EXEC.ROT :close  0}{:instruction INTEGER.FROMFLOAT :close  4}{:instruction CODE.YANK :close  0}{:instruction INTEGER.< :close  0}{:instruction CODE.NULL :close  0}{:instruction INTEGER.YANK :close  4}{:instruction CODE.YANK :close  0}{:instruction CODE.POSITION :close  0}{:instruction CODE.DO*COUNT :close  0}{:instruction FLOAT.FROMINTEGER :close  4}{:instruction CODE.DO*TIMES :close  0}{:instruction FLOAT.YANKDUP :close  4}{:instruction FLOAT.SWAP :close  0}{:instruction INTEGER.* :close  0}{:instruction CODE.INSTRUCTIONS :close  4}{:instruction BOOLEAN.YANKDUP :close  0}{:instruction EXEC.STACKDEPTH :close  0}{:instruction CODE.DO :close  4}{:instruction 1 :close  0}{:instruction INTEGER.= :close  0}
(FLOAT.FROMINTEGER INTEGER.SHOVE INTEGER.YANKDUP INTEGER.= INTEGER.SWAP FLOAT.FROMDATA EXEC.DO*RANGE (INTEGER.FROMBOOLEAN INTEGER.POP EXEC.WHEN (FLOAT.ROT CODE.FROMFLOAT INTEGER.MIN ))INTEGER.MAX EXEC.POP ()INTEGER.> BOOLEAN.NOT CODE.SWAP FLOAT.YANKDUP CODE.LENGTH FLOAT.FLUSH EXEC.ROT (INTEGER.FROMFLOAT )()()CODE.YANK INTEGER.< CODE.NULL INTEGER.YANK CODE.YANK CODE.POSITION CODE.DO*COUNT FLOAT.FROMINTEGER CODE.DO*TIMES FLOAT.YANKDUP FLOAT.SWAP INTEGER.* CODE.INSTRUCTIONS BOOLEAN.YANKDUP EXEC.STACKDEPTH CODE.DO 1 INTEGER.= )
{:instruction CODE.SHOVE :close  0}{:instruction CODE.LIST :close  0}{:instruction CODE.QUOTE :close  4}{:instruction CODE.SHOVE :close  0}{:instruction BOOLEAN.YANKDUP :close  0}{:instruction CODE.DUP :close  0}{:instruction BOOLEAN.SHOVE :close  0}{:instruction INTEGER.- :close  0}{:instruction BOOLEAN.FROMFLOAT :close  0}{:instruction CODE.APPEND :close  0}{:instruction BOOLEAN.DUP :close  0}{:instruction INTEGER.% :close  0}{:instruction FLOAT.- :close  0}{:instruction INTEGER.DUP :close  0}{:instruction CODE.ROT :close  0}{:instruction EXEC.K :close  0}{:instruction EXEC.ROT :close  0}{:instruction CODE.NTH :close  0}{:instruction EXEC.YANKDUP :close  0}{:instruction INTEGER./ :close  0}{:instruction CODE.FROMFLOAT :close  4}{:instruction CODE.INSERT :close  0}{:instruction CODE.CONTAINER :close  0}{:instruction INTEGER.FLUSH :close  0}{:instruction BOOLEAN.NOT :close  0}{:instruction EXEC.K :close  0}{:instruction CODE.ROT :close  4}{:instruction CODE.CONS :close  4}{:instruction BOOLEAN.DUP :close  0}{:instruction BOOLEAN.YANK :close  4}{:instruction FLOAT.MAX :close  0}{:instruction INTEGER.+ :close  0}{:instruction EXEC.DO*RANGE :close  0}{:instruction BOOLEAN.FROMFLOAT :close  0}{:instruction CODE.CONTAINER :close  0}{:instruction EXEC.SWAP :close  0}{:instruction FLOAT.TAN :close  0}{:instruction INTEGER.STACKDEPTH :close  0}{:instruction 0 :close  0}{:instruction INTEGER.= :close  0}
(CODE.SHOVE CODE.LIST CODE.QUOTE ()CODE.SHOVE BOOLEAN.YANKDUP CODE.DUP BOOLEAN.SHOVE INTEGER.- BOOLEAN.FROMFLOAT CODE.APPEND BOOLEAN.DUP INTEGER.% FLOAT.- INTEGER.DUP CODE.ROT EXEC.K (EXEC.ROT (CODE.NTH EXEC.YANKDUP INTEGER./ CODE.FROMFLOAT )()())(CODE.INSERT CODE.CONTAINER INTEGER.FLUSH BOOLEAN.NOT EXEC.K (CODE.ROT )())CODE.CONS BOOLEAN.DUP BOOLEAN.YANK FLOAT.MAX INTEGER.+ EXEC.DO*RANGE (BOOLEAN.FROMFLOAT CODE.CONTAINER EXEC.SWAP (FLOAT.TAN INTEGER.STACKDEPTH 0 INTEGER.= )()))
