      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    alternation
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    alternation
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.=
        random_atom() return;
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    alternation
Install New Generation
Generation 15
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    alternation
  n = 4
    alternation
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    alternation
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    alternation
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    alternation
Install New Generation
Generation 16
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.POSITION
        random_atom() return;
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    alternation
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    alternation
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.SWAP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 17
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.STACKDEPTH
        random_atom() return;
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    alternation
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    alternation
    Child too big
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.STACKDEPTH
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.>
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.FROMBOOLEAN
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.Y
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.DO*
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.SHOVE
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.YANK
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.<
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.NTHCDR
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.DO*WHILE
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.DO*
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.ROT
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.FROMBOOLEAN
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.NAND
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.POP
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.YANK
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.<
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.SIZE
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.POP
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.+
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.DO*TIMES
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.SWAP
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.DUP
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.<
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.CAR
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.FLUSH
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.S
        random_atom() return;
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.POP
        random_atom() return;
  n = 6
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 7
    alternation
  n = 8
    alternation
  n = 9
    alternation
  n = 10
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.DO
        random_atom() return;
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 11
    alternation
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    alternation
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.YANK
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 21
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
        instruction = EXEC.STACKDEPTH
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = EXEC.S
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 18
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = -9049.86
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = -9049.86
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    alternation
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.SIN
        random_atom() return;
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 6
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 7
    alternation
  n = 8
    alternation
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    alternation
  n = 19
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 20
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 21
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 19
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    alternation
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 6
    alternation
  n = 7
    alternation
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 10
    alternation
  n = 11
    alternation
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    alternation
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 20
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    alternation
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    alternation
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.SWAP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.SIN
        random_atom() return;
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    alternation
  n = 13
    alternation
  n = 14
    alternation
  n = 15
    alternation
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    alternation
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 21
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 22
    alternation
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.Y
        random_atom() return;
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 21
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 1
    alternation
  n = 2
    alternation
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.%
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 10
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    alternation
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.NAND
        random_atom() return;
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.SHOVE
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
      return Individual(new_genome);
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 21
    alternation
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); BOOLEAN.FLUSH
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 22
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    alternation
  n = 10
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 11
    alternation
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    alternation
  n = 15
    alternation
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 23
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    alternation
  n = 3
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 4
    alternation
  n = 5
    alternation
  n = 6
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 7
    alternation
  n = 8
    alternation
  n = 9
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.SWAP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    alternation
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    alternation
  n = 19
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 24
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    alternation
  n = 3
    alternation
  n = 4
    alternation
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    alternation
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.STACKDEPTH
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    alternation
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    alternation
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    alternation
  n = 19
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.SWAP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 25
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    alternation
  n = 4
    alternation
  n = 5
    alternation
  n = 6
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 7
    alternation
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    alternation
  n = 10
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 11
    alternation
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.DO
        random_atom() return;
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    alternation
  n = 15
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    alternation
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 26
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    alternation
  n = 3
    alternation
  n = 4
    alternation
  n = 5
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.STACKDEPTH
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    alternation
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    alternation
  n = 12
    alternation
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); EXEC.YANKDUP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = CODE.POSITION
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.YANKDUP
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    alternation
  n = 15
    alternation
  n = 16
    alternation
  n = 17
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 18
    alternation
  n = 19
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
Install New Generation
Generation 27
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 1
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.LENGTH
        random_atom() return;
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); FLOAT.SIN
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 2
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 3
    alternation
  n = 4
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 5
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.<
        random_atom() return;
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 6
    alternation
  n = 7
    alternation
  n = 8
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 9
    alternation
  n = 10
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    alternation
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    alternation
  n = 16
    alternation
  n = 17
    alternation
  n = 18
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 19
    alternation
  n = 20
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 21
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 22
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.-
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = FLOAT.SIN
      new_genome.push_back(random_atom() 2);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); INTEGER.YANK
        random_atom() return;
      new_genome.push_back(random_atom() 2 returned);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 28
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = 1.79769e+308
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = 1.79769e+308
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    alternation
  n = 1
    alternation
  n = 2
    alternation
  n = 3
    alternation
  n = 4
    alternation
  n = 5
    alternation
  n = 6
    alternation
  n = 7
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 8
    alternation
  n = 9
    alternation
  n = 10
    alternation
  n = 11
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 12
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 13
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      atom.type == atom.floating_point
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 14
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 15
    alternation
  n = 16
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return ins;
          gene.instruction = code->to_string(); CODE.SHOVE
        random_atom() return;
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(atom);
      return Individual(new_genome);
  n = 17
    alternation
  n = 18
    alternation
  n = 19
    alternation
  n = 20
    alternation
  n = 21
    alternation
  n = 22
    alternation
  n = 23
    alternation
  n = 24
    alternation
Install New Generation
Generation 29
Compte Errors
  Evaluate Individual 0 Min error = 1.79769e+308
  Evaluate Individual 1 Min error = 1.79769e+308
  Evaluate Individual 2 Min error = 1.79769e+308
  Evaluate Individual 3 Min error = 1.79769e+308
  Evaluate Individual 4 Min error = 1.79769e+308
  Evaluate Individual 5 Min error = 1.79769e+308
  Evaluate Individual 6 Min error = 1.79769e+308
  Evaluate Individual 7 Min error = 1.79769e+308
  Evaluate Individual 8 Min error = 1.79769e+308
  Evaluate Individual 9 Min error = 1.79769e+308
  Evaluate Individual 10 Min error = 1.79769e+308
  Evaluate Individual 11 Min error = 1.79769e+308
  Evaluate Individual 12 Min error = 1.79769e+308
  Evaluate Individual 13 Min error = -58501.8
  Evaluate Individual 14 Min error = 1.79769e+308
  Evaluate Individual 15 Min error = 1.79769e+308
  Evaluate Individual 16 Min error = 1.79769e+308
  Evaluate Individual 17 Min error = 1.79769e+308
  Evaluate Individual 18 Min error = 1.79769e+308
  Evaluate Individual 19 Min error = 1.79769e+308
  Evaluate Individual 20 Min error = 1.79769e+308
  Evaluate Individual 21 Min error = 1.79769e+308
  Evaluate Individual 22 Min error = 1.79769e+308
  Evaluate Individual 23 Min error = 1.79769e+308
  Evaluate Individual 24 Min error = 1.79769e+308
   Min error = -58501.8
Number_Of_Test_Cases = 16
Calculate Epsilons
Produce New Offspring
  n = 0
    mutation
      uniform_mutation
        instruction = FLOAT.-
      new_genome.push_back(atom);
        instruction = FLOAT.DUP
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = EXEC.SWAP
      new_genome.push_back(atom);
        instruction = CODE.STACKDEPTH
      new_genome.push_back(atom);
        instruction = FLOAT.ERC
      new_genome.push_back(atom);
        instruction = FLOAT.FROMDATA
      new_genome.push_back(atom);
        instruction = FLOAT.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.SHOVE
      new_genome.push_back(atom);
        instruction = FALSE
      new_genome.push_back(atom);
        instruction = INTEGER.STACKDEPTH
      new_genome.push_back(atom);
        instruction = INTEGER.DUP
      new_genome.push_back(atom);
        instruction = EXEC.POP
      new_genome.push_back(atom);
        instruction = FLOAT.=
      new_genome.push_back(atom);
        instruction = INTEGER.%
      new_genome.push_back(atom);
        instruction = BOOLEAN.ROT
      new_genome.push_back(atom);
        instruction = BOOLEAN.SWAP
      new_genome.push_back(atom);
        instruction = CODE.POSITION
      new_genome.push_back(atom);
        instruction = FLOAT.SIN
      new_genome.push_back(atom);
        instruction = CODE.NOOP
      new_genome.push_back(atom);
        instruction = CODE.CONS
      new_genome.push_back(random_atom() 1);
        random_atom()
        make_terminal()
        make_terminal() return retval;

C:\Users\edgar\OneDrive\Projects\Source\Repos\EdGarrity\SOS\SOS>